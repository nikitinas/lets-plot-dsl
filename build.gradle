buildscript {
    ext.kotlin_version = '1.3.50'
    ext.dokka_version = '0.9.17'

    repositories {
        maven { url 'https://dl.bintray.com/kotlin/dokka' }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}




plugins { id "com.jfrog.bintray" version "1.8.1" }

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'maven-publish'

// not neeeded but does not work without
mainClassName = "foo.Bar" // not needed but does not work without

repositories {
    mavenCentral()
//    mavenLocal()
    jcenter()
    maven { url 'https://jetbrains.bintray.com/lets-plot-maven'}
    maven { url 'https://kotlin.bintray.com/kotlin-datascience' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-reflect"

    compile 'org.jetbrains.kotlin:dataframe:0.0.8-dev-88'

    compile 'org.jetbrains.lets-plot:lets-plot-common:1.5.4'
    compile 'org.jetbrains.lets-plot-kotlin:lets-plot-kotlin-api-kernel:1.1.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'io.kotlintest:kotlintest-assertions:3.1.6'
    testCompile 'de.mpicbg.scicomp:kutils:0.11'


    // needed to work around https://youtrack.jetbrains.com/issue/KT-15064
    compileOnly "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"

}


// see https://github.com/Kotlin/dokka/issues/42
task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir

    reportUndocumented = false
    samples = ['src/test/kotlin/krangl/samples']

    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// http://stackoverflow.com/questions/11474729/how-to-build-sources-jar-with-gradle
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//Minimal dokka configuration:
dokka {
    outputFormat = 'html'
//    outputDirectory = "$buildDir/javadoc"
    outputDirectory = "$projectDir/javadoc"

//    sourceDirs = files('src/test/kotlin')
    samples = ['src/test/kotlin/krangl/samples']

    // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
    reportUndocumented = false

//    http://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation
    includes = ['docs/packages_info.md']
}

group 'org.jetbrains.kotlin'
version '0.0.10-dev-19'

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar { classifier "sources" }
        }
    }
}

if (hasProperty('bintray_user') && hasProperty('bintray_key')) {
    bintray {

        // property must be set in ~/.gradle/gradle.properties
        user = bintray_user
        key = bintray_key

        publications = ['maven'] //When uploading configuration files

        dryRun = false //Whether to run this as dry-run, without deploying
        publish = true // If version should be auto published after an upload

        pkg {
            repo = 'kotlin-datascience'
            name = 'lets-plot-dsl'
            vcsUrl = 'https://github.com/nikitinas/lets-plot-dsl'
            userOrg = 'kotlin'
            licenses = ['MIT']
            publicDownloadNumbers = true

            //Optional version descriptor
            version {
                name = project.version //Bintray logical version name
                desc = '.'
                released = new Date()
                vcsTag = 'v' + project.version
            }
        }
    }
}